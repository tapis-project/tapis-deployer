networks:
    tapis:
        name: tapis
        external: true

services:
    systems-api:
        container_name: systems-api
        image: {{ systems_api_image }}
        networks:
            - tapis
{% if systems_port is not none %}
        ports: 
            - "{{systems_port}}:8080"
{% endif %}
        env_file:
            {{ tapisdatadir }}/systems/env
        environment:
            - TAPIS_DB_JDBC_URL=jdbc:postgresql://systems-postgres-16:5432/tapissysdb
            - TAPIS_SITE_ID={{ systems_service_site_id }}
            - TAPIS_TENANT_SVC_BASEURL={{ systems_service_url }}
            - TAPIS_GLOBUS_CLIENT_ID
            - TAPIS_DB_USER=tapis_sys
        command: java -Xms{{ systems_heap_min }} -Xmx{{ systems_heap_max }} --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.time=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED -cp "systems.jar:dependencies/*" edu.utexas.tacc.tapis.systems.api.SystemsApplication
        depends_on:
            systems-migrations:
                condition: service_completed_successfully
        
    systems-postgres-16:
        container_name: systems-postgres-16
        image: postgres:16
        networks:
            - tapis
        env_file:
            {{ tapisdatadir }}/systems/env
        environment:
            - PGDATA=/pgdata/data
        volumes:
            - {{ tapisdatadir }}/systems/postgres_16:/pgdata
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]

    systems-migrations:
        container_name: systems-migrations
        image: postgres:16
        networks:
            - tapis
        volumes:
            - ./systems-init-db-sh:/init-db
        env_file:
            {{ tapisdatadir }}/systems/env
        command: bash -c "cp /init-db /local_initdb && echo 100 && chown $(whoami) /local_initdb && echo 200 && chmod +x /local_initdb && echo 300 && /local_initdb"
        depends_on:
            systems-postgres-16:
                condition: service_healthy
