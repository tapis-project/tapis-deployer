#!/bin/bash

set -e 

# global Tapis burnup script

# Helps run all the components in the correct order

# sorting out some script coordinates
mydir_absolute=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
myscript_nameonly="$( basename -- "${BASH_SOURCE[0]}" )"
myscript_absolute="$mydir_absolute/$myscript_nameonly"

# uncomment for debug 
#echo $mydir_absolute
#echo $myscript_nameonly
#echo $myscript_absolute


burnup_or_exit () {
  echo "Burnup: $1" 
  cd $mydir_absolute/$1 || exit 1
  ./burnup || exit 1
  cd $mydir_absolute || exit 1
  echo "Done: $1" 
  return 0
}

reload_nginx () {
  echo "Reloading nginx:" 
  cd $mydir_absolute/proxy || exit 1
  docker exec -it proxy nginx -s reload  || exit 1
  cd $mydir_absolute || exit 1
  echo "Done: $1" 
  return 0
}
  

echo "Start: top-level-burnup"

mkdir -p {{ tapisdatadir }}

{% if tapisflavor == "docker" %}
### Docker-specific setup 
if ! docker network inspect tapis >& /dev/null
then 
  echo "Creating docker tapis network:"
  docker network create tapis 
fi
{% endif %}


### init / setup

{% if "proxy" in components_to_deploy %}
burnup_or_exit proxy
{% endif %}

{% if "vault" in components_to_deploy %}
burnup_or_exit vault
{% endif %}

{% if "skadmin" in components_to_deploy%}
burnup_or_exit skadmin
{% endif %}


### primary services

{% if "tenants" in components_to_deploy %}
burnup_or_exit tenants
{% endif %}

{% if "security" in components_to_deploy %}
burnup_or_exit security
{% endif %}

{% if "tokens" in components_to_deploy %}
burnup_or_exit tokens
{% endif %}

{% if "authenticator" in components_to_deploy %}
burnup_or_exit authenticator
{% endif %}


### secondary services

{% if "notifications" in components_to_deploy %}
burnup_or_exit notifications
{% endif %}

{% if "jobs" in components_to_deploy %}
burnup_or_exit jobs  
{% endif %}

{% if "files" in components_to_deploy %}
burnup_or_exit files
{% endif %}

{% if "systems" in components_to_deploy %}
burnup_or_exit systems
{% endif %}

{% if "apps" in components_to_deploy %}
burnup_or_exit apps
{% endif %}

## tertiary services

{% if "actors" in components_to_deploy %}
burnup_or_exit actors
{% endif %}

# container-registry

# globus-proxy

{% if "globus-proxy" in components_to_deploy %}
burnup_or_exit globus-proxy
{% endif %}

{% if "meta" in components_to_deploy %}
burnup_or_exit meta
{% endif %}

# monitoring

# pgrest

# pgrest-a2cps-dev

# pgrest-a2cps-prod

# pods

{% if "streams" in components_to_deploy %}
burnup_or_exit streams
{% endif %}

{% if "tapisui" in components_to_deploy %}
burnup_or_exit tapisui
{% endif %}

# workflows

echo "Done: top-level-burnup"

# restart nginx 

# reload nginx because of nginx bug:
# container ips can restart/change during burnup sequence and nginx hangs onto their cached ip even after TTL should expire
# i.e. site-router could have 10.10.10.11 on startup, but end up with 10.10.10.15 later. nginx won't notice and routing breaks
reload_nginx


exit 0
