---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: files-workers
  name: files-workers
spec:
  replicas: {{files_worker_replicas}}
  selector:
    matchLabels:
      app: files-workers
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: files-workers
    spec:
{% if files_use_topology_spread_constraints %}
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: files-workers
{% endif %}
{% if files_node_selector is not none %}
      nodeSelector:
        exempt: "yes"
{% endif %}
      containers:
        - envFrom:
            - configMapRef:
                name: files-environment-vars
          env:
{% if files_node_name == true %}
            - name: TAPIS_LOCAL_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
{% endif %}
            - name: TOKENS_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: files-config
                  key: service_site_url
            - name: TENANTS_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: files-config
                  key: service_site_url
            - name: TAPIS_SITE_ID
              valueFrom:
                configMapKeyRef:
                  name: files-config
                  key: site_id
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tapis-files-secrets
                  key: rabbitmq-password
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tapis-files-secrets
                  key: postgres-password
            - name: SERVICE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tapis-files-secrets
                  key: service-password
{% if systems_globus_client_id is defined %}
            - name: TAPIS_GLOBUS_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  name: files-config
                  key: globus_client_id
{% endif %}
            - name: TAPIS_AUDIT_ENABLED
              value: "{{ files_audit_enabled }}"
            - name: CHILD_THREAD_POOL_SIZE
              value: "20"
            - name: PARENT_THREAD_POOL_SIZE
              value: "10"
            - name: TAPIS_DB_CONNECTION_POOL_SIZE
              value: "10"
            - name: TAPIS_DB_CONNECTION_POOL_CORE_SIZE
              value: "5"
          image: {{ files_workers_image }}
          imagePullPolicy: Always
          name: files-workers
          stdin: true
          tty: true
      restartPolicy: Always
