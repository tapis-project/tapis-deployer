Instructions for manually migrating to a new version of postgres.
For example, from version 12.4 to version 16.
==================================================================
Service: Applications
==================================================================

There should be a directory in place for the new postgres deployment, for
example a directory named postgre_16.
There should also be a directory named migrate containing the scripts
and files to be used during the migration process.

Please follow these steps:

1. Shut down processes that connect to the DB, such as a front-end api service
   and any worker processes using burndown_pg_migrate:
   cd migrate
   ./burndown_pg_migrate.

2. Backup the DB in case of any issues with the migration.

3. Bring up the new postgres without initializing the service tables using burnup_pg_migrate:
   cd migrate
   ./burnup_pg_migrate.

4. Update settings in migrate/migrate.env
   - Set properties for connecting to old and new DB
   - Set properties for the old and new containers.

5. Run the migrate script migrateDb.sh:
   cd migrate
   ./migrateDb.sh

6. Check the before and after table counts once the script completes.
   Results will be located in stdout from the script. Check for errors, etc.

7. Bring down the old postgres:
   cd migrate
   ./burndown_old

8. Bring up the service by running the top level burnup script.

8. Verify the service has started without errors. Check that service is getting
   data from the new DB by calling an endpoint to list resources.

9. Once the new database has been thoroughly tested and you are confident
   everything is working as expected, then the old PVC volume may be deleted.
